[
{ "keys": ["super+k","super+k"], "command": "focus_neighboring_group" },
{ "keys": ["control+alt+shift+up"], "command": "scroll_lines", "args": {"amount": 5.0}  },
{ "keys": ["control+alt+shift+down"], "command": "scroll_lines", "args": {"amount": -5.0}  },

{ "keys": ["super+shift+e"], "command": "slurp_find_string" },
{ "keys": ["super+shift+control+e"], "command": "slurp_replace_string" },
// Navigating between files
{ "keys": ["super+alt+up"], "command": "jump_back" },

{ "keys": ["super+v"], "command": "paste_and_indent", "context": [{ "key": "selector", "operator": "not_equal", "operand": "text.dired" }] },
{ "keys": ["super+shift+v"], "command": "paste" },

{ "keys": ["super+\\"],       "command": "reveal_in_side_bar" },
{ "keys": ["super+shift+\\"], "command": "open_dir", "args": {"dir": "$file_path", "file": "$file_name"} },
{ "keys": ["super+alt+control+m"], "command": "context_menu" },

{ "keys": ["super+shift+0"],  "command": "reset_font_size" },

// Layout Extra
// 2 row layout
{ "keys": ["super+alt+5"], "command": "set_layout", "args": {"cols": [0.0, 1.0], "rows": [0.0, 0.5, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 1, 2]] } },
// 3 row layout
{ "keys": ["super+alt+6"], "command": "set_layout", "args": {"cols": [0.0, 1.0], "rows": [0.0, 0.33, 0.66, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]] } },
// 3 cell layout, main cell on left and two mini cell on right on top of eachother
{ "keys": ["super+alt+7"], "command": "set_layout", "args": {"cols": [0.0, 0.5, 1.0], "rows": [0.0, 0.5, 1.0], "cells": [[0, 0, 1, 2], [1, 0, 2, 1], [1, 1, 2, 2]] } },
// 3 cell layout, main cell top left, right col cell and bottom row cell
{ "keys": ["super+alt+8"], "command": "set_layout", "args": {"cols": [0.0, 0.75, 1.0], "rows": [0.0, 0.75, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 2, 2], [1, 0, 2, 1]] } },

{ "keys": ["f1"],         "command": "focus_side_bar" },
{ "keys": ["super+f2"],   "command": "dired", "args": { "immediate": true,  "single_pane": true, "project": true, "other_group": "left"} },
{ "keys": ["f2"],         "command": "dired", "args": { "immediate": true,  "single_pane": true, "project": true } },
{ "keys": ["f3"],         "command": "dired_jump_list" },
{ "keys": ["super+f3"],   "command": "dired_jump", "args": {"new_window": true} },
{ "keys": ["f6"],         "command": "toggle_setting", "args": {"setting": "spell_check"} },
{ "keys": ["f7"],         "command": "prev_bookmark" },
{ "keys": ["f8"],         "command": "toggle_bookmark" },
{ "keys": ["super+f8"],   "command": "clear_bookmarks" },
{ "keys": ["f9"],         "command": "next_bookmark" },
{ "keys": ["f10"],        "command": "side_bar_move" },
{ "keys": ["super+f10"],  "command": "side_bar_rename" },
{ "keys": ["f11"],        "command": "toggle_distraction_free" },
{ "keys": ["shift+f11"],  "command": "max_pane" },
{ "keys": ["f12"],        "command": "side_bar_files_open_with", "args": {"application": "Google Chrome.app", "extensions":".*" } },
{ "keys": ["super+f12"],  "command": "markdown_preview",  "args": {"parser": "markdown", "target": "browser"} },

{ "keys": ["super+f6"],  "command": "color_helper", "args": { "mode": "info" } },

// overriding Close Other Window Plugin Shortcuts
{ "keys": ["super+alt+w"], "command": "close_other_tabs" },
{ "keys": ["super+alt+control+w"], "command": "close_other_windows" },

// Overriding PlainNotes
{ "keys": ["super+f1"],   "command": "jotter" },

{ "keys": ["super+alt+d"], "command": "expand_selection", "args": {"to": "indentation"} },
{ "keys": ["super+shift+d"], "command": "expand_selection", "args": {"to": "scope"} },

{ "keys": ["super+j"], "command": "join_lines" },
{ "keys": ["super+shift+j"], "command": "ace_jump_word" },

// Expand Region
{ "keys": ["super+shift+m"], "command": "expand_region" },
{ "keys": ["super+u"], "command": "expand_region", "args": {"undo": true}, "context": [{ "key": "expand_region_soft_undo" }]
},

{ "keys": ["super+ctrl+alt+]"], "command": "abacus" },
{ "keys": ["super+ctrl+alt+["], "command": "align_tab", "args" : {"live_preview" : true} },

{ "keys": ["super+ctrl+alt+'"], "command": "change_quotes" },

// Scope Hunter
{ "keys": ["super+alt+control+6"], "command": "toggle_selection_scope" },

// ERB
{ "keys": ["control+shift+."], "command": "erb", "context": [{ "key": "selector", "operator": "equal", "operand": "text.html.ruby, text.haml, source.yaml, source.css, source.scss, source.js, source.coffee" } ] },

// GitSavvy
{ "keys": ["super+e", "super+e"], "command": "gs_show_status" },
{ "keys": ["super+e", "super+b"], "command": "gs_blame" },
{ "keys": ["super+e", "super+d"], "command": "gs_diff" },
{ "keys": ["super+e", "super+f"], "command": "gs_inline_diff" },

// Fold Comments
{ "keys": ["super+k", "super+c"], "command": "toggle_fold_comments" },

// GIT
// { "keys": ["super+e", "super+a"], "command": "git_add_choice" },
// { "keys": ["super+e", "super+b"], "command": "git_blame" },
// { "keys": ["super+e", "super+c"], "command": "git_commit" },
// { "keys": ["super+e", "super+d"], "command": "git_diff_all" },
// { "keys": ["super+e", "super+l"], "command": "git_log" },
// { "keys": ["super+e", "super+p"], "command": "git_pull" },
// { "keys": ["super+e", "super+q"], "command": "git_quick_commit" },
// { "keys": ["super+e", "super+s"], "command": "git_status" },
// { "keys": ["super+e", "super+u"], "command": "git_push" },

// SQL:
// { "keys": ["super+e", "super+e"], "command": "sql_execute" },
// { "keys": ["super+e", "super+w"], "command": "sql_pad" },

// { "keys": ["alt+f3"], "command": "side_bar_new_file2" },
// { "keys": ["super+f3"], "command": "side_bar_new_directory" },
// { "keys": ["ctrl+alt+f"], "command": "side_bar_find_files_path_containing" },

// { "keys": ["super+k", "super+f"], "command": "js_format" },
// { "keys": ["ctrl+shift+c"], "command": "coffee_compile"},

// Ruby Test
// { "keys": ["super+alt+control+r"], "command": "run_single_ruby_test",
//           "context": [ { "key": "selector", "operator": "equal", "operand": "source.ruby, source.rspec, text.gherkin.feature"} ]
// },

// Vintagous Mode
{ "keys": ["j", "j"], "command": "_enter_normal_mode", "args": {"mode": "mode_insert"}, "context": [{"key": "vi_insert_mode_aware"}] },

{ "keys": ["tab"], "command": "expand_abbreviation_by_tab", "context":
    [
        { "operand": "source.js", "operator": "equal", "match_all": true, "key": "selector" },
        { "match_all": true, "key": "selection_empty" },
        { "operator": "equal", "operand": false, "match_all": true, "key": "has_next_field" },
        { "operand": false, "operator": "equal", "match_all": true, "key": "auto_complete_visible" },
        { "match_all": true, "key": "is_abbreviation" }
    ]
},

{ "keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
  [
    { "operand": "source", "operator": "equal", "key": "selector" },
    { "key": "setting.auto_indent", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{|\\(|\\[$", "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^\\}|\\)|\\]", "match_all": true }
  ]
},

// Auto insert ${} on typing $ inside ES6 string templates
{ "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\${${1:$SELECTION}}$0"},
  "context": [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    {
      "operand": "(string.interpolated.js) - string source, (string.interpolated.es) - string source",
      "operator": "equal",
      "match_all": true,
      "key": "selector"
    }
  ]
},

// Auto-pair backticks ``
{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
    { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[`a-zA-Z0-9_]$", "match_all": true },
    { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true }
  ]
},
{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
  ]
},
{ "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
  ]
},
{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
  ]
},

// Auto-pair «»
{ "keys": ["«"], "command": "insert_snippet", "args": {"contents": "«$0»"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
  ]
},
{ "keys": ["«"], "command": "insert_snippet", "args": {"contents": "«${0:$SELECTION}»"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
  ]
},
{ "keys": ["»"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^»", "match_all": true }
  ]
},
{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "preceding_text", "operator": "regex_contains", "operand": "«$", "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^»", "match_all": true }
  ]
}
]
