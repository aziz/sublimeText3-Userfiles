[

{ "keys": ["super+v"], "command": "paste_and_indent" },
{ "keys": ["super+shift+v"], "command": "paste" },
{ "keys": ["super+alt+d"], "command": "expand_selection", "args": {"to": "scope"} },

{ "keys": ["super+\\"],       "command": "reveal_in_side_bar" },
{ "keys": ["super+shift+\\"], "command": "open_dir", "args": {"dir": "$file_path", "file": "$file_name"} },
{ "keys": ["super+alt+control+m"], "command": "context_menu" },

// UI
{ "keys": ["super+k", "super+1"], "command": "toggle_minimap" },
{ "keys": ["super+k", "super+2"], "command": "toggle_tabs" },
{ "keys": ["super+k", "super+3"], "command": "toggle_status_bar" },
{ "keys": ["super+shift+0"],  "command": "reset_font_size" },

// Layout Extra
// 2 row layout
{ "keys": ["super+alt+6"], "command": "set_layout", "args": {"cols": [0.0, 1.0], "rows": [0.0, 0.5, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 1, 2]] } },
// 3 row layout
{ "keys": ["super+alt+7"], "command": "set_layout", "args": {"cols": [0.0, 1.0], "rows": [0.0, 0.33, 0.66, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]] } },
// 2 row layout (66,33)
{ "keys": ["super+alt+8"], "command": "set_layout", "args": {"cols": [0.0, 1.0], "rows": [0.0, 0.66, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 1, 2]] } },
// 2 row layout (33,66)
{ "keys": ["super+alt+9"], "command": "set_layout", "args": {"cols": [0.0, 1.0], "rows": [0.0, 0.33, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 1, 2]] } },
// 3 cell layout, main cell on left and two mini cell on right on top of eachother
{ "keys": ["super+alt+0"], "command": "set_layout", "args": {"cols": [0.0, 0.5, 1.0], "rows": [0.0, 0.5, 1.0], "cells": [[0, 0, 1, 2], [1, 0, 2, 1], [1, 1, 2, 2]] } },
// 3 cell layout, main cell top left, right col cell and bottom row cell
{ "keys": ["super+alt+f3"], "command": "set_layout", "args": {"cols": [0.0, 0.75, 1.0], "rows": [0.0, 0.75, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 2, 2], [1, 0, 2, 1]] } },

// Navigating between files
{ "keys": ["super+alt+up"], "command": "jump_back" },
{ "keys": ["super+k","super+k"], "command": "focus_neighboring_group" },

{ "keys": ["f1"],         "command": "dired", "args": { "immediate": true} },
{ "keys": ["f11"],        "command": "toggle_distraction_free" },
{ "keys": ["shift+f11"],  "command": "max_pane" },

// very useful custom shortcuts:
{ "keys": ["f7"],         "command": "prev_bookmark" },
{ "keys": ["f8"],         "command": "toggle_bookmark" },
{ "keys": ["super+f8"],   "command": "clear_bookmarks" },
{ "keys": ["f9"],         "command": "next_bookmark" },

// sidebar enhancement shortcuts
{ "keys": ["f2"], "command": "side_bar_move" },
{ "keys": ["super+f2"], "command": "side_bar_rename" },
{ "keys": ["alt+f3"], "command": "side_bar_new_file2" },
{ "keys": ["super+f3"], "command": "side_bar_new_directory" },
// { "keys": ["ctrl+alt+f"], "command": "side_bar_find_files_path_containing" },

// Markdown Preview
{ "keys": ["super+f12"],  "command": "markdown_preview",  "args": {"parser": "github", "target": "browser"} },

// Scope Hunter
{ "keys": ["super+alt+control+6"], "command": "toggle_selection_scope" },

// Ruby Test
{ "keys": ["super+alt+control+r"], "command": "run_single_ruby_test",
          "context": [ { "key": "selector", "operator": "equal", "operand": "source.ruby, source.rspec, text.gherkin.feature"} ]
}, // single test

{ "keys": ["super+k", "super+f"], "command": "js_format" },

// GIT
{ "keys": ["super+e", "super+b"], "command": "git_blame" },
{ "keys": ["super+e", "super+d"], "command": "git_diff_all" },
{ "keys": ["super+e", "super+p"], "command": "git_pull" },
{ "keys": ["super+e", "super+u"], "command": "git_push" },
{ "keys": ["super+e", "super+a"], "command": "git_add_choice" },
{ "keys": ["super+e", "super+c"], "command": "git_commit" },
{ "keys": ["super+e", "super+s"], "command": "git_status" },
{ "keys": ["super+e", "super+q"], "command": "git_quick_commit" },
{ "keys": ["super+e", "super+l"], "command": "git_log" },

// Auto-pair backticks ``
{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
    { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[`a-zA-Z0-9_]$", "match_all": true },
    { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true }
  ]
},
{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
  ]
},
{ "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
  ]
},
{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
  ]
},

// Auto-pair «»
{ "keys": ["«"], "command": "insert_snippet", "args": {"contents": "«$0»"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
  ]
},
{ "keys": ["«"], "command": "insert_snippet", "args": {"contents": "«${0:$SELECTION}»"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
  ]
},
{ "keys": ["»"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^»", "match_all": true }
  ]
},
{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
  [
    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    { "key": "preceding_text", "operator": "regex_contains", "operand": "«$", "match_all": true },
    { "key": "following_text", "operator": "regex_contains", "operand": "^»", "match_all": true }
  ]
},

]
